/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Shared file between builds so that they can all use the same dependencies and
 * maven repositories.
 **/
ext.deps = [:]
def versions = [:]
versions.arch_core = "1.1.1"
versions.retrofit = "2.3.0"
versions.okhttp = "3.9.0"
versions.support = "27.1.1"
versions.multidex = "1.0.3"
versions.constraint = "1.1.0"
versions.web3j = "3.3.1-android"
versions.geth = "1.7.0"
versions.gson = "2.8.2"
versions.rxjava2 = "2.1.6"
versions.rxkotlin = "2.1.0"
versions.rx_android = "2.0.1"
versions.dagger = "2.15"
versions.lifecycle = "1.1.1"
versions.room = "1.1.1"
versions.glide = "4.5.0"
versions.navigationVersion = "1.0.0-alpha01"
versions.leakcanary = "1.5.4"
def deps = [:]

def support = [:]
support.annotations = "com.android.support:support-annotations:$versions.support"
support.app_compat = "com.android.support:appcompat-v7:$versions.support"
support.recyclerview = "com.android.support:recyclerview-v7:$versions.support"
support.cardview = "com.android.support:cardview-v7:$versions.support"
support.design = "com.android.support:design:$versions.support"
support.v4 = "com.android.support:support-v4:$versions.support"
support.core_utils = "com.android.support:support-core-utils:$versions.support"
support.multidex = "com.android.support:multidex:$versions.multidex"
support.constraint = "com.android.support.constraint:constraint-layout:$versions.constraint"
deps.support = support

def room = [:]
room.runtime = "android.arch.persistence.room:runtime:$versions.room"
room.compiler = "android.arch.persistence.room:compiler:$versions.room"
room.rxjava2 = "android.arch.persistence.room:rxjava2:$versions.room"
room.testing = "android.arch.persistence.room:testing:$versions.room"
deps.room = room

def lifecycle = [:]
lifecycle.runtime = "android.arch.lifecycle:runtime:$versions.lifecycle"
lifecycle.extensions = "android.arch.lifecycle:extensions:$versions.lifecycle"
//lifecycle.java8 = "android.arch.lifecycle:common-java8:$versions.lifecycle"
lifecycle.compiler = "android.arch.lifecycle:compiler:$versions.lifecycle"
lifecycle.reactivestreams = "android.arch.lifecycle:reactivestreams:$versions.lifecycle"

deps.lifecycle = lifecycle

def retrofit = [:]
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit
//.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
deps.okhttp = "com.squareup.okhttp3:okhttp:$versions.okhttp"
deps.gson = "com.google.code.gson:gson:$versions.gson"

def dagger = [:]
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.android = "com.google.dagger:dagger-android:$versions.dagger"
dagger.android_support = "com.google.dagger:dagger-android-support:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
dagger.android_support_compiler = "com.google.dagger:dagger-android-processor:$versions.dagger"
deps.dagger = dagger

def kotlin = [:]
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
//kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
kotlin.jdk7 = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
deps.kotlin = kotlin

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"
deps.glide = glide
deps.constraint_layout = "com.android.support.constraint:constraint-layout:$versions.constraint_layout"
deps.junit = "junit:junit:$versions.junit"
//deps.rxjava2 = "io.reactivex.rxjava2:rxjava:$versions.rxjava2"
deps.rx_android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.rxkotlin = "io.reactivex.rxjava2:rxkotlin:$versions.rxkotlin"

//deps.android_gradle_plugin = "com.android.tools.build:gradle:$versions.android_gradle_plugin"

// Navigation
def navigation = [:]
navigation.fragment = 'android.arch.navigation:navigation-fragment:' + versions.navigationVersion
navigation.ui = 'android.arch.navigation:navigation-ui:' + versions.navigationVersion
deps.navigation = navigation

// Navigation
def leakcanary = [:]
deps.leakcanary = leakcanary
leakcanary.leakcanary = 'com.squareup.leakcanary:leakcanary-android:' + versions.leakcanary
leakcanary.leakcanary_no_op = 'com.squareup.leakcanary:leakcanary-android-no-op:' + versions.leakcanary
//the end
ext.deps = deps
//
//def addRepos(RepositoryHandler handler) {
//    handler.google()
//    handler.jcenter()
//    handler.maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
//}
//
//ext.addRepos = this.&addRepos
